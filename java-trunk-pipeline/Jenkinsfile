openshift.withCluster() {
    env.NAMESPACE = openshift.project()
    // env.SKOPEO_IMAGE = openshift.selector( 'is/jenkins-slave-image-mgmt' ).object().status.dockerImageRepository
    // env.APP_NAME = "${env.JOB_NAME}".replaceAll(/-?pipeline-?/, '').replaceAll(/-?${env.NAMESPACE}-?/, '')
    // echo "Starting Pipeline for ${APP_NAME}..."
    // def projectBase = "${env.NAMESPACE}".replaceAll(/-dev/, '')
    // env.STAGE1 = "${projectBase}-dev"
    // env.STAGE2 = "${projectBase}-stage"
    // env.STAGE3 = "${projectBase}-prod"
}

pipeline {

    agent any

    stages {
        stage('Publish to Quay') {
            agent {
                node {
                    label 'jenkins-slave-image-mgmt'
                }
            }

            steps {
                script {
                    def source = "docker://docker-registry.default.svc/hello/hello:latest"
                    def destination = "docker://quay-03ae.apps.shared.na.openshift.opentlc.com/hello/hello:latest"
                }

                echo "Copying image to external registry..."
                sh "skopeo copy --authfile /var/run/secrets/kubernetes.io/dockerconfigjson/.dockerconfigjson $source $destination"
            }
        }

        stage('Make release') {
            agent {
                node {
                    label 'jenkins-slave-mvn'
                }
            }

            steps {
                sh "mvn versions:set "
                // git branch for release
                //

            }

        }

    }

}
